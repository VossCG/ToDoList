<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AndroidLayouts">
    <shared>
      <config />
    </shared>
  </component>
  <component name="AndroidLogFilters">
    <option name="TOOL_WINDOW_CUSTOM_FILTER" value="ViewPager" />
    <option name="TOOL_WINDOW_CONFIGURED_FILTER" value="Show only selected application" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c1549120-c2af-47d6-85bc-cbb43545675e" name="Default Changelist" comment="## 修改與優化&#10;BrowseEventFragment :&#10;1. 修正一些畫面跳轉初始化異常 (adapter calendar instance)&#10;2. 新增 currentDay Icon item 跳轉當天日期，並刷新當前ViewModel的日期資料，避免再slide其他頁面的資料不同步&#10;3. currentDay 點擊會有 ripple 效果&#10;&#10;HomeFragment : &#10;1. layout 改為motionLayout 讓title下拉縮起&#10;&#10;SearchFragment : &#10;1. cardView 點擊expand 可透過arrow or root&#10;2. cardView 點擊 會有ripple效果&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 使用motionLayout 優化 SearchFragment 畫面，下拉可收起editText，下拉到最後一個item 隱藏 floating but&#10;2. 考慮是否要拿掉BottomNavigation 因為目前BrowseEvent，就能夠呈現足夠的畫面給使用者，已經不太需要原本的Home，感覺可以做替換在優化">
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/executionHistory/executionHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/executionHistory/executionHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/fileHashes/resourceHashesCache.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/classAnalysis.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/classAnalysis.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/jarAnalysis.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/jarAnalysis.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/javaCompile.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/javaCompile.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/taskHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.0.2/javaCompile/taskHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Adapter/CalendarEventListAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/adapter/CalendarEventListAdapter.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Adapter/CalendarViewAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/adapter/CalendarViewAdapter.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Adapter/CalendarViewPagerAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/adapter/CalendarViewPagerAdapter.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Adapter/ContentListAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/adapter/ContentListAdapter.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Adapter/HomeEventAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/adapter/HomeEventAdapter.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Adapter/SearChRecyclerAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/adapter/SearChRecyclerAdapter.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/DI/AppModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/data/di/AppModule.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/DI/MyApplication.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/data/di/MyApplication.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Data/EventRepository.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/data/EventRepositoryImp.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/BaseFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/BaseFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/BrowseEventFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/BrowseEventFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/CalendarFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/CalendarFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/ContentMonthlyFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/ContentMonthlyFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/EditEventFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/EditEventFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/HomeFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/HomeFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/SearchFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/SearchFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Fragment/UpdateEventFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/fragment/UpdateEventFragment.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/MainActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/MainActivity.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Room/EventDao.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/data/room/EventDao.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Room/EventDataBase.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/data/room/EventDataBase.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Room/EventTypes.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/data/room/EventTypes.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/SplashActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/ui/SplashActivity.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Util/AnimUtil.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/util/AnimUtil.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Util/EventTypeDiffUtil.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/util/EventTypeDiffUtil.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Util/LinearItemDecoration.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/util/LinearItemDecoration.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Util/OnClickUtil.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/util/OnClickUtil.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/Util/StringDiffUtil.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/util/StringDiffUtil.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/ViewModel/BrowseEventViewModel.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/viewModel/BrowseEventViewModel.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/ViewModel/EventViewModel.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voss/todolist/presentation/viewModel/EventViewModel.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/src/main/res/navigation/nav_graph.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/navigation/nav_graph.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
      <option value="module" />
    </option>
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[4d756a6a]" />
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/app">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ToDoList" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ToDoList" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ToDoList" type="f1a62948:ProjectNode" />
                <item name="app" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ToDoList" type="f1a62948:ProjectNode" />
                <item name="app" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="navigationResourceFile" />
        <option value="Kotlin Interface" />
        <option value="valueResourceFile" />
        <option value="Kotlin File" />
        <option value="resourceFile" />
        <option value="layoutResourceFile" />
        <option value="Kotlin Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="26Ms7IUeeuXyZPaDxGmmQ86PX6Z" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ResourceManagerPrefKey.ResourceType" value="DRAWABLE" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="android-custom-viewC:/Users/USER/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.1.0/f2bdf79e1977939817f54a9d3e2f6bc52b63bdd0/recyclerview-1.1.0-sources.jar!/androidx/recyclerview/widget/RecyclerView.java_RecyclerView_DIMENSIONS" value="1080&#10;1920" />
    <property name="android-custom-viewC:/Users/USER/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.1.0/f2bdf79e1977939817f54a9d3e2f6bc52b63bdd0/recyclerview-1.1.0-sources.jar!/androidx/recyclerview/widget/RecyclerView.java_SELECTED" value="RecyclerView" />
    <property name="android-custom-viewC:/Users/USER/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.2.0/3e159bfab49c7e6495fe374e6e5e1e989ee21dcf/recyclerview-1.2.0-sources.jar!/androidx/recyclerview/widget/RecyclerView.java_RecyclerView_DIMENSIONS" value="1080&#10;1920" />
    <property name="android-custom-viewC:/Users/USER/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.2.0/3e159bfab49c7e6495fe374e6e5e1e989ee21dcf/recyclerview-1.2.0-sources.jar!/androidx/recyclerview/widget/RecyclerView.java_SELECTED" value="RecyclerView" />
    <property name="android-custom-viewC:/Users/USER/.gradle/caches/modules-2/files-2.1/androidx.viewpager2/viewpager2/1.0.0/3c3569044e6969f1ee5c3aa03b08e6717a2d782f/viewpager2-1.0.0-sources.jar!/androidx/viewpager2/widget/ViewPager2.java_SELECTED" value="ViewPager2" />
    <property name="android-custom-viewC:/Users/USER/.gradle/caches/modules-2/files-2.1/androidx.viewpager2/viewpager2/1.0.0/3c3569044e6969f1ee5c3aa03b08e6717a2d782f/viewpager2-1.0.0-sources.jar!/androidx/viewpager2/widget/ViewPager2.java_ViewPager2_DIMENSIONS" value="1080&#10;1920" />
    <property name="android-custom-viewC:/Users/USER/AppData/Local/Android/Sdk/sources/android-31/android/view/View.java_SELECTED" value="View" />
    <property name="android-custom-viewC:/Users/USER/AppData/Local/Android/Sdk/sources/android-31/android/view/ViewGroup.java_SELECTED" value="ViewGroup" />
    <property name="android-custom-viewC:/Users/USER/AppData/Local/Android/Sdk/sources/android-31/android/widget/ImageButton.java_ImageButton_DIMENSIONS" value="1080&#10;1920" />
    <property name="android-custom-viewC:/Users/USER/AppData/Local/Android/Sdk/sources/android-31/android/widget/ImageButton.java_SELECTED" value="ImageButton" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="com.android.tools.idea.sqlite.queryhistory" value="select * from EventTypes order by id&#10;select * from EventTypes where year= '2022' and month= '4'&#10;select * from EventTypes where year= '2022' and month= '3'&#10;select * from EventTypes where year like 2022 AND month like  3&#10;select * from EventTypes where id= '0'" />
    <property name="last_opened_file_path" value="$USER_HOME$/Desktop" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="Errors" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\USER\AndroidStudioProjects\ToDoList\app\src\main\res\drawable" />
    </key>
    <key name="android.template.1925602421">
      <recent name="com.voss.todolist" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\USER\AndroidStudioProjects\ToDoList\app\src\main\java\com\voss\todolist\Adapter" />
      <recent name="C:\Users\USER\AndroidStudioProjects\ToDoList\app\src\main\java\com\voss\todolist\Data" />
    </key>
    <key name="MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY">
      <recent name="com.voss.todolist.presentation.ui" />
      <recent name="com.voss.todolist.Fragment" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="com.voss.todolist.presentation" />
      <recent name="com.voss.todolist.Data" />
      <recent name="com.voss.todolist.ui" />
    </key>
  </component>
  <component name="RunManager" selected="Android App.app">
    <configuration name="app" type="AndroidRunConfigurationType" factoryName="Android App" activateToolWindowBeforeRun="false">
      <module name="ToDoList.app" />
      <option name="DEPLOY" value="true" />
      <option name="DEPLOY_APK_FROM_BUNDLE" value="false" />
      <option name="DEPLOY_AS_INSTANT" value="false" />
      <option name="ARTIFACT_NAME" value="" />
      <option name="PM_INSTALL_OPTIONS" value="" />
      <option name="ALL_USERS" value="false" />
      <option name="ALWAYS_INSTALL_WITH_PM" value="false" />
      <option name="DYNAMIC_FEATURES_DISABLED_LIST" value="" />
      <option name="ACTIVITY_EXTRA_FLAGS" value="" />
      <option name="MODE" value="default_activity" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
      <option name="INSPECTION_WITHOUT_ACTIVITY_RESTART" value="false" />
      <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
      <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />
      <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />
      <option name="DEBUGGER_TYPE" value="Auto" />
      <Auto>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Auto>
      <Hybrid>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Hybrid>
      <Java />
      <Native>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Native>
      <Profilers>
        <option name="ADVANCED_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_CONFIGURATION_NAME" value="Sample Java Methods" />
        <option name="STARTUP_NATIVE_MEMORY_PROFILING_ENABLED" value="false" />
        <option name="NATIVE_MEMORY_SAMPLE_RATE_BYTES" value="2048" />
      </Profilers>
      <option name="DEEP_LINK" value="" />
      <option name="ACTIVITY_CLASS" value="" />
      <option name="SEARCH_ACTIVITY_IN_GLOBAL_SCOPE" value="false" />
      <option name="SKIP_ACTIVITY_VALIDATION" value="false" />
      <method v="2">
        <option name="Android.Gradle.BeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="EventTypesKt" type="JetRunConfigurationType" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.voss.todolist.data.EventTypesKt" />
      <module name="ToDoList.app.main" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="KotlinPlaygroundKt" type="JetRunConfigurationType" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.voss.todolist.KotlinPlaygroundKt" />
      <module name="ToDoList.app" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestFlowKt" type="JetRunConfigurationType" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.voss.todolist.TestFlowKt" />
      <module name="ToDoList.app" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Kotlin.EventTypesKt" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c1549120-c2af-47d6-85bc-cbb43545675e" name="Default Changelist" comment="" />
      <created>1647244621096</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1647244621096</updated>
    </task>
    <task id="LOCAL-00001" summary="first commit">
      <created>1649485595604</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1649485595604</updated>
    </task>
    <task id="LOCAL-00002" summary="second commit&#10;&#10;新增content item 點擊跳轉updateFragment">
      <created>1649487988970</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1649487988970</updated>
    </task>
    <task id="LOCAL-00003" summary="1.新增content row中的 點擊icon編輯功能&#10;2.在跳轉到MonthFragment 讓navbottom消失">
      <created>1649663247406</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1649663247406</updated>
    </task>
    <task id="LOCAL-00004" summary="1.在contentItem 新增刪除功能&#10;2.在ViewHolder 當中去綁定刪除功能，若是在OnBindViewHolder 去實作 position會出現異常，因為刪除後會再重新呼叫，跑出outindexpointer exception">
      <created>1649667250510</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1649667250510</updated>
    </task>
    <task id="LOCAL-00005" summary="SearchFragment 相關更動&#10;1.新增recyclerview&#10;2.新增對應adapter&#10;3.新增recycler item 點擊擴展layout&#10;&#10;待處理&#10;1.搜尋EditText資料拿取&#10;2.資料過濾後導入Adapter">
      <created>1649752832155</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1649752832156</updated>
    </task>
    <task id="LOCAL-00006" summary="SearchFragment 相關更動&#10;&#10;1.新稱搜尋按鈕&#10;2.editText 外觀優化&#10;3.rowItem 布局優化&#10;&#10;待處理&#10;搜尋功能需改為關鍵字title搜尋">
      <created>1649757263312</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1649757263313</updated>
    </task>
    <task id="LOCAL-00007" summary="SearchFragment 相關更動&#10;&#10;1.editText關鍵字搜尋功能完成&#10;2.監聽keyboard 的actionDone 去執行搜尋">
      <created>1649833452837</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1649833452838</updated>
    </task>
    <task id="LOCAL-00008" summary="SearchFragment 相關更動&#10;&#10;1.新增toolbar 點選切換搜尋功能(功能尚未完成)&#10;2.editText中點選actionDone收起鍵盤">
      <created>1649840881087</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1649840881087</updated>
    </task>
    <task id="LOCAL-00009" summary="SearchFragment 相關更動&#10;&#10;1.將收起鍵盤功能放到BaseFragment global當中 讓所有Fragment都能使用">
      <created>1649842091767</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1649842091767</updated>
    </task>
    <task id="LOCAL-00010" summary="SearchFragment 相關更動&#10;&#10;1.新增切換搜尋功能，能透過filter icon 來切換 title or content 搜尋條件 點選會跳出一個bottomsheet&#10;2.新增bottomsheet 讓使用者透過點選裡面的button，切換想要搜尋的條件&#10;3.新增一個textView 用來顯示現在搜尋的條件為何 是title or content">
      <created>1649928261240</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1649928261240</updated>
    </task>
    <task id="LOCAL-00011" summary="SearchFragment 相關更動&#10;&#10;1.新增切換搜尋功能，能透過filter icon 來切換 title or content 搜尋條件 點選會跳出一個bottomsheet&#10;2.新增bottomsheet 讓使用者透過點選裡面的button，切換想要搜尋的條件&#10;3.新增一個textView 用來顯示現在搜尋的條件為何 是title or content">
      <created>1649928271828</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1649928271828</updated>
    </task>
    <task id="LOCAL-00012" summary="SearchFragment 相關更動&#10;&#10;1.將原本的bottomSheet,更改成BottomSheetDialog&#10;2.toolbar更換為imageButton作為切換filter，並生出bottomSheetDialog&#10;3.把filter list的過濾搜尋資料的功能，放到viewModel當中，包成名為filterDataWithFactor的方法">
      <created>1649952921852</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1649952921852</updated>
    </task>
    <task id="LOCAL-00013" summary="刪除多餘的元件與class">
      <created>1649995719533</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1649995719533</updated>
    </task>
    <task id="LOCAL-00014" summary="SearchFragment 相關優化&#10;1.expand 內容 完成按鈕可使用 刪除已完成的活動與任務&#10;2.fragment 當中新增viewModel去監聽資料庫的變化刷新畫面，原本是沒有去追蹤，因應完成按鈕的新增而對應&#10;3.statusBar 顏色更換為黑色&#10;4.editText輸入關鍵字搜尋，若查詢不到對應資料，使用Toast顯示提醒&#10;5.rowItem原本是要點選，title文字才能expand，現在改為點選cardView，不局限於文字上而是整體">
      <created>1650006254885</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1650006254885</updated>
    </task>
    <task id="LOCAL-00015" summary="SearchFragment 相關優化&#10;1.rowItem新增arrow提醒使用者，點即箭頭即可expand&#10;2.cardView點擊expand更改為arrow icon">
      <created>1650010231173</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1650010231173</updated>
    </task>
    <task id="LOCAL-00016" summary="1.部分畫面元件優化調整&#10;2.修改theme colorPrimary &#10;3.新增一個TextView Style">
      <created>1650275413695</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1650275413695</updated>
    </task>
    <task id="LOCAL-00017" summary="1.部分畫面元件優化調整&#10;2.修改SearchFragment filter 按鈕，更改為fab  &#10;3.contentFragment 新稱 fab 點選跳轉editFragment 新增事件">
      <created>1650349885918</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1650349885918</updated>
    </task>
    <task id="LOCAL-00018" summary="部分畫面元件優化調整">
      <created>1650522215906</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1650522215906</updated>
    </task>
    <task id="LOCAL-00019" summary="部分畫面 action 跳轉動畫優化">
      <created>1650612240345</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1650612240345</updated>
    </task>
    <task id="LOCAL-00020" summary="新增 Timber 功能">
      <created>1650698382541</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1650698382542</updated>
    </task>
    <task id="LOCAL-00021" summary="修改 viewModel 資料讀取 :&#10;&#10;原本都在外部去修改value&#10;現在變成在viewModel去作業，使用postValue去更動value，在外部只透過observe去監聽變化並修改view的狀態，曝露一個fun 讓外部去呼叫並帶入想要的參數，連棟修改viewModel當中的LiveDate">
      <created>1650880035226</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1650880035226</updated>
    </task>
    <task id="LOCAL-00022" summary="repo Room ViewModel 改為Hilt注入">
      <created>1650949651184</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1650949651184</updated>
    </task>
    <task id="LOCAL-00023" summary="repo Room ViewModel 改為Hilt注入">
      <created>1650949708086</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1650949708086</updated>
    </task>
    <task id="LOCAL-00024" summary="ContentMonthlyFragment 優化&#10;&#10;1. 改為ListAdapter，帶入diffCallBack&#10;2. update資料後 position item 綁定異常修正">
      <created>1650965729283</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1650965729283</updated>
    </task>
    <task id="LOCAL-00025" summary="ContentMonthlyFragment 優化&#10;&#10;1. 改為ListAdapter，帶入diffCallBack&#10;2. update資料後 position item 綁定異常修正">
      <created>1650965742509</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1650965742509</updated>
    </task>
    <task id="LOCAL-00026" summary="ContentMonthlyFragment 優化&#10;&#10;1.修正更改日期之後 position 綁定資料異常&#10;2.將update &amp; delete 的interface 改為 高階函數寫法">
      <created>1651031330447</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1651031330447</updated>
    </task>
    <task id="LOCAL-00027" summary="EditFragment 優化&#10;&#10;將calendarView 改為 DatePicker">
      <created>1651049505753</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1651049505753</updated>
    </task>
    <task id="LOCAL-00028" summary="EditFragment 優化&#10;&#10;將calendarView 改為 DatePicker">
      <created>1651050963920</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1651050963920</updated>
    </task>
    <task id="LOCAL-00029" summary="優化Home Browse MonthFragment頁面&#10;&#10;1.將homeAdapter 改為ListAdapter&#10;2.建立一個ListAdapterDiffUtil&#10;3.在MonthFragment 點選月份如果沒資料 將會顯示一個Toast提醒使用者 透過自訂setOnGroupListener 在沒資料的時候回傳 true 則不會展開清單">
      <created>1651415341469</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1651415341469</updated>
    </task>
    <task id="LOCAL-00030" summary="優化SearCh、Update Fragment&#10;&#10;1.在Search 點選filter 顯示textView 提醒使用者切換搜尋條件&#10;2.將filter fab按鈕動畫 額外創建一個物件 用fun來生成動畫物件給頁面&#10;3.優化Update部分與多餘的code">
      <created>1651467133707</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1651467133707</updated>
    </task>
    <task id="LOCAL-00031" summary="1. 整體檔案名稱:fragment layout itemView drawable 改為一致命格式&#10;2. adapter 都更改為ListAdapter">
      <created>1654763629127</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1654763629127</updated>
    </task>
    <task id="LOCAL-00032" summary="優化所有xml style">
      <created>1654855391364</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1654855391364</updated>
    </task>
    <task id="LOCAL-00033" summary="部分Layout drawable 優化&#10;1. 全部shape radius 都設為10dp&#10;2. 刪去多餘的layout 布局&#10;3. recyclerView 間距 都透過LinearItemDecoration 設定&#10;4. 新增一個 ripple，用來設定expandListView 的group item 點擊特效">
      <created>1654936259134</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1654936259134</updated>
    </task>
    <task id="LOCAL-00034" summary="1. 部分adapter 優化&#10;2. 部分Fragment 優化&#10;3. 部分layout 優化&#10;4. 將一些假資料的字串放入字串資源當中&#10;5. 新增一個StartSearchFragment，讓使用者點選SearchFragment Toolbar的時候，跳轉到有搜尋紀錄的畫面，使用Transition達到類似dropDownMenu的跳轉效果。而原本SearchFragment頁面的搜尋功能，必須移植到StartSearch，本身也必須修改為只負責呈現搜尋結果的畫面。&#10;6. 呈上，如果搜尋改為如此，好像就沒必要放在BottomNav去做導航，應該可以放在HomeFragment讓使用者點選Toolbar跳轉，參考畫面(旋轉拍賣的主頁)。將會改為Home(點選toolbar)-&gt;StartSearch(展開搜尋頁面與紀錄)-&gt;Search(呈現搜尋結果)的流程">
      <created>1655201167071</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1655201167072</updated>
    </task>
    <task id="LOCAL-00035" summary="1. 搜尋頁面更改優化取消&#10;2. 優化BrowseFragment&#10;預計整個大改，將會改為使用一個calendarView，來呈現目前所有的日期與事件，並透過顏色不同來代表，目前日期那些是有特殊事件，或是哪天的事件很多&#10;3. 創建一個customCalendarView&#10;透過一個ViewPager2 包裹 gridView 來呈現&#10;4. 新的BrowseFragment 下方的ListView 將會呈現當前的日期的所有事件title">
      <created>1655396539397</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1655396539397</updated>
    </task>
    <task id="LOCAL-00036" summary="##　修改與優化&#10;1. 將於CalendarView 的GridView改為recycler&#10;2. 設計一個ViewModel 給BrowseEvent 與 CalendarView 共用相同的日曆數值(年、月、日)&#10;但是否要作為androidViewModel 還在考慮，可能一般的ViewModel就已經夠用&#10;3. 設計三個shape drawable 給 calendar 的icon使用，用來辨識當前的日期 事件有多少&#10;&#10;## 下一步要完成功能&#10;1. 將calendarView 與 room 當中的資料綁定&#10;2. 將calendarView 滑動 會更動現況頁面的&quot;年月日&quot;&#10;3. 日期與星期的綁定排版還需要思考一下該如何處理">
      <created>1655462083951</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1655462083951</updated>
    </task>
    <task id="LOCAL-00037" summary="## 修改與優化&#10;1. 把Room 資料庫的格式去除掉 年、月、日的屬性欄位，若有需要的地方，直接透過class 裡面的轉化方法拿到&#10;2. 正式把BrowseFragment 改變為 CalendarView的呈現方式，原本的Year Month 跳轉呈現已刪除&#10;3. Room dao 新增一個 Query的方法，能透過 dateInteger range 拿到想要的範圍資料，是為了讓CalendarView 需要的資料而設計&#10;4. 部分Fragment layout優化&#10;5. 資料庫寫入的月份數字，不再從0開始，因為原本是為了配合DatePicker出來的數字，但現在為了一致性，所有關於日期資料的數字邏輯都必須相同&#10;&#10;## 待修正&#10;1. CalendarView 的 icon 與資料綁定判斷的邏輯有錯誤&#10;2. BrowseFragment and CalendarView 頁面當中的資料邏輯必須在確認與檢查，以免有異常&#10;&#10;3. UpdateEvent 寫入與載入資料出現異常&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. 完成BrowseEventFragment 下方的ListView 用來呈現使用者點選當前的日期事件">
      <created>1655718483426</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1655718483426</updated>
    </task>
    <task id="LOCAL-00038" summary="## 修改與優化&#10;1. 修改ViewModel一些東西，考慮要刪掉一些LiveData&#10;2.  CalendarView 的 icon 與資料綁定判斷&quot;已修正&quot;&#10;3. BrowseFragment and CalendarView 頁面連結邏輯與異常 &quot;已修正&quot;&#10;4. UpdateEvent 寫入與載入資料異常 &quot;已修正&quot;&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. CalendarFragment 綁定icon圖示的邏輯是透過當前的position來判斷目前滑到哪個月分，並從資料庫取得相關資料，在想看看有沒有哪些可以替代或優化的地方&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. 完成BrowseEventFragment 下方的ListView 用來呈現使用者點選當前的日期事件">
      <created>1655741210498</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1655741210498</updated>
    </task>
    <task id="LOCAL-00039" summary="## 修改與優化&#10;BrowseEventFragment :&#10;1. 新增下方顯示當前選擇日期的event，透過設置在ViewModel的selectDay的屬性，讓在calendarView 點選日期的當下去改變，並在BrowseEvent去監聽，並刷新當年當月當日的event，讓eventList不斷的去更新畫面&#10;2. 新增一個checkSlide方法，透過positionOffset判斷當前ViewPager的滑動方向，並不再透過currentItem去改變viewModel的month value&#10; ------------------------------------------&#10; &#10;CalendarFragment :&#10;1. 修改拿取當前月份資料的方式，原本是透過eventDao，使用SQL語法篩選出當月的資料，但其實只要在ViewModel注入repo資料，再透過自定義的 getMonthEvent 過濾出想要月份的資料就可，這樣在頁面創建的時候，透過當前的position，載入資料，如果是使用之前設計的viewModel month，來篩選，會因為ViewPager 預先載入的特性，讓前後的頁面會先創建，並吃到當前頁面的month value，所以拿不到對應的月份資料給當下的頁面&#10;2. 透過adapter的itemCallback，拿取使用者點選的日期，傳遞到ViewModel的selectItemDay的屬性值，讓外部的頁面，能知道當前所選取的itemDay&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. Demo與測試 整個 自定義CalendarView">
      <created>1655998433941</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1655998433941</updated>
    </task>
    <task id="LOCAL-00040" summary="## 修改與優化&#10;BrowseEventFragment :&#10;1. ViewPager 滑動事件的判斷，更改當前的月分與年份都透過覆寫 onPageSelected 的position改變的時候，去注入相對應的資料&#10;2. 設立readAllEvent監聽，當資料庫改變的時候，去刷新當前的頁面&#10;3. 設立下方List item 事件若沒有的話，顯示一個TextView 告知使用者現在沒有活動事件&#10; ------------------------------------------&#10; &#10;CalendarFragment :&#10;1. 設立readAllEvent監聽，當資料庫改變的時候，去刷新當前的頁面&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. Demo與測試 整個 自定義CalendarView">
      <created>1656062586621</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1656062586621</updated>
    </task>
    <task id="LOCAL-00041" summary="## 修改與優化&#10;BrowseEventFragment :&#10;1. item expand content 會自動撐開&#10; &#10;CalendarFragment :&#10;1. 透過calendar拿到每個月分的第一天的week，算出offset，並在adapter的建構子新增WeekOffset注入，使得onBindView item的時候，必須大於偏移值的position item，才會有動應的日期，size也會因為偏移加大&#10;&#10;SearChFragment:&#10;1. item expand content 會自動撐開&#10;&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 修改CalendarView 刪除event 刷新畫面icon 異常(將CalendarViewAdapter 改成ListAdatper)">
      <created>1656385743200</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1656385743200</updated>
    </task>
    <task id="LOCAL-00042" summary="## 修改與優化&#10;BrowseEventFragment :&#10;1. EventList新增 update delete功能&#10;2. CalendarViewAdapter 改為 遞延初始化 因為在navigation 跳轉的時候，是從ViewCreated 開始，不會重新創建屬性，所以在popStack 回來的時候，不會重新設定adapter。&#10;由於是FragmentStateAdapter 建構子必須要得到一個Fragment 作為初始的畫面。但由於by lazy的初始化方式，讓adapter沒有重製，應該放在ViewCreated之後，才能成功設置&#10;3. Calendar 實體 原本透過 by lazy生成，但在跳轉update 呼叫viewModel的 getDateFormat 裡面的 calendar set 改變了本體，導致每次update回來後，view從calendar取得的 day 匯市剛剛update的日期。所以應該在畫面回來的時候，初始化calendar，依樣也用lateinit 來設定，並在onViewCreated之後，重新拿取實體&#10;&#10;CalendarFragment :&#10;1. 修正資料庫更新後，刷新畫面異常&#10;2. 將offset的itemView 設為GONE&#10;&#10;Update &amp; Edit Fragment :&#10;1. 將輸入title 的字元提高到 40&#10;&#10;HomeFragment :&#10;1. 新增一個tv 來告知使用者當前沒有event&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 點擊currentDay icon item 跳轉到當天的頁面">
      <created>1656408905396</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1656408905396</updated>
    </task>
    <task id="LOCAL-00043" summary="## 修改與優化&#10;BrowseEventFragment :&#10;1. 修正一些畫面跳轉初始化異常 (adapter calendar instance)&#10;2. 新增 currentDay Icon item 跳轉當天日期，並刷新當前ViewModel的日期資料，避免再slide其他頁面的資料不同步&#10;3. currentDay 點擊會有 ripple 效果&#10;&#10;HomeFragment : &#10;1. layout 改為motionLayout 讓title下拉縮起&#10;&#10;SearchFragment : &#10;1. cardView 點擊expand 可透過arrow or root&#10;2. cardView 點擊 會有ripple效果&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 使用motionLayout 優化 SearchFragment 畫面，下拉可收起editText，下拉到最後一個item 隱藏 floating but">
      <created>1656600727092</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1656600727092</updated>
    </task>
    <task id="LOCAL-00044" summary="## 修改與優化&#10;BrowseEventFragment :&#10;1. 修正一些畫面跳轉初始化異常 (adapter calendar instance)&#10;2. 新增 currentDay Icon item 跳轉當天日期，並刷新當前ViewModel的日期資料，避免再slide其他頁面的資料不同步&#10;3. currentDay 點擊會有 ripple 效果&#10;&#10;HomeFragment : &#10;1. layout 改為motionLayout 讓title下拉縮起&#10;&#10;SearchFragment : &#10;1. cardView 點擊expand 可透過arrow or root&#10;2. cardView 點擊 會有ripple效果&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 使用motionLayout 優化 SearchFragment 畫面，下拉可收起editText，下拉到最後一個item 隱藏 floating but&#10;2. 考慮是否要拿掉BottomNavigation 因為目前BrowseEvent，就能夠呈現足夠的畫面給使用者，已經不太需要原本的Home，感覺可以做替換在優化">
      <created>1656673468579</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1656673468579</updated>
    </task>
    <option name="localTasksCounter" value="45" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="true" />
                </map>
              </option>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="部分畫面元件優化調整" />
    <MESSAGE value="部分畫面 action 跳轉動畫優化" />
    <MESSAGE value="新增 Timber 功能" />
    <MESSAGE value="修改 viewModel 資料讀取 :&#10;&#10;原本都在外部去修改value&#10;現在變成在viewModel去作業，使用postValue去更動value，在外部只透過observe去監聽變化並修改view的狀態，曝露一個fun 讓外部去呼叫並帶入想要的參數，連棟修改viewModel當中的LiveDate" />
    <MESSAGE value="repo Room ViewModel 改為Hilt注入" />
    <MESSAGE value="ContentMonthlyFragment 優化&#10;&#10;1. 改為ListAdapter，帶入diffCallBack&#10;2. update資料後 position item 綁定異常修正" />
    <MESSAGE value="ContentMonthlyFragment 優化&#10;&#10;1.修正更改日期之後 position 綁定資料異常&#10;2.將update &amp; delete 的interface 改為 高階函數寫法" />
    <MESSAGE value="EditFragment 優化&#10;&#10;將calendarView 改為 DatePicker" />
    <MESSAGE value="優化Home Browse MonthFragment頁面&#10;&#10;1.將homeAdapter 改為ListAdapter&#10;2.建立一個ListAdapterDiffUtil&#10;3.在MonthFragment 點選月份如果沒資料 將會顯示一個Toast提醒使用者 透過自訂setOnGroupListener 在沒資料的時候回傳 true 則不會展開清單" />
    <MESSAGE value="優化SearCh、Update Fragment&#10;&#10;1.在Search 點選filter 顯示textView 提醒使用者切換搜尋條件&#10;2.將filter fab按鈕動畫 額外創建一個物件 用fun來生成動畫物件給頁面&#10;3.優化Update部分與多餘的code" />
    <MESSAGE value="1. 整體檔案名稱:fragment layout itemView drawable 改為一致命格式&#10;2. adapter 都更改為ListAdapter" />
    <MESSAGE value="優化所有xml style" />
    <MESSAGE value="部分Layout drawable 優化&#10;1. 全部shape radius 都設為10dp&#10;2. 刪去多餘的layout 布局&#10;3. recyclerView 間距 都透過LinearItemDecoration 設定&#10;4. 新增一個 ripple，用來設定expandListView 的group item 點擊特效" />
    <MESSAGE value="1. 部分adapter 優化&#10;2. 部分Fragment 優化&#10;3. 部分layout 優化&#10;4. 將一些假資料的字串放入字串資源當中&#10;5. 新增一個StartSearchFragment，讓使用者點選SearchFragment Toolbar的時候，跳轉到有搜尋紀錄的畫面，使用Transition達到類似dropDownMenu的跳轉效果。而原本SearchFragment頁面的搜尋功能，必須移植到StartSearch，本身也必須修改為只負責呈現搜尋結果的畫面。&#10;6. 呈上，如果搜尋改為如此，好像就沒必要放在BottomNav去做導航，應該可以放在HomeFragment讓使用者點選Toolbar跳轉，參考畫面(旋轉拍賣的主頁)。將會改為Home(點選toolbar)-&gt;StartSearch(展開搜尋頁面與紀錄)-&gt;Search(呈現搜尋結果)的流程" />
    <MESSAGE value="1. 搜尋頁面更改優化取消&#10;2. 優化BrowseFragment&#10;預計整個大改，將會改為使用一個calendarView，來呈現目前所有的日期與事件，並透過顏色不同來代表，目前日期那些是有特殊事件，或是哪天的事件很多&#10;3. 創建一個customCalendarView&#10;透過一個ViewPager2 包裹 gridView 來呈現&#10;4. 新的BrowseFragment 下方的ListView 將會呈現當前的日期的所有事件title" />
    <MESSAGE value="##　修改與優化&#10;1. 將於CalendarView 的GridView改為recycler&#10;2. 設計一個ViewModel 給BrowseEvent 與 CalendarView 共用相同的日曆數值(年、月、日)&#10;但是否要作為androidViewModel 還在考慮，可能一般的ViewModel就已經夠用&#10;3. 設計三個shape drawable 給 calendar 的icon使用，用來辨識當前的日期 事件有多少&#10;&#10;## 下一步要完成功能&#10;1. 將calendarView 與 room 當中的資料綁定&#10;2. 將calendarView 滑動 會更動現況頁面的&quot;年月日&quot;&#10;3. 日期與星期的綁定排版還需要思考一下該如何處理" />
    <MESSAGE value="## 修改與優化&#10;1. 把Room 資料庫的格式去除掉 年、月、日的屬性欄位，若有需要的地方，直接透過class 裡面的轉化方法拿到&#10;2. 正式把BrowseFragment 改變為 CalendarView的呈現方式，原本的Year Month 跳轉呈現已刪除&#10;3. Room dao 新增一個 Query的方法，能透過 dateInteger range 拿到想要的範圍資料，是為了讓CalendarView 需要的資料而設計&#10;4. 部分Fragment layout優化&#10;5. 資料庫寫入的月份數字，不再從0開始，因為原本是為了配合DatePicker出來的數字，但現在為了一致性，所有關於日期資料的數字邏輯都必須相同&#10;&#10;## 待修正&#10;1. CalendarView 的 icon 與資料綁定判斷的邏輯有錯誤&#10;2. BrowseFragment and CalendarView 頁面當中的資料邏輯必須在確認與檢查，以免有異常&#10;&#10;3. UpdateEvent 寫入與載入資料出現異常&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. 完成BrowseEventFragment 下方的ListView 用來呈現使用者點選當前的日期事件" />
    <MESSAGE value="## 修改與優化&#10;1. 修改ViewModel一些東西，考慮要刪掉一些LiveData&#10;2.  CalendarView 的 icon 與資料綁定判斷&quot;已修正&quot;&#10;3. BrowseFragment and CalendarView 頁面連結邏輯與異常 &quot;已修正&quot;&#10;4. UpdateEvent 寫入與載入資料異常 &quot;已修正&quot;&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. CalendarFragment 綁定icon圖示的邏輯是透過當前的position來判斷目前滑到哪個月分，並從資料庫取得相關資料，在想看看有沒有哪些可以替代或優化的地方&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. 完成BrowseEventFragment 下方的ListView 用來呈現使用者點選當前的日期事件" />
    <MESSAGE value="## 修改與優化&#10;BrowseEventFragment :&#10;1. 新增下方顯示當前選擇日期的event，透過設置在ViewModel的selectDay的屬性，讓在calendarView 點選日期的當下去改變，並在BrowseEvent去監聽，並刷新當年當月當日的event，讓eventList不斷的去更新畫面&#10;2. 新增一個checkSlide方法，透過positionOffset判斷當前ViewPager的滑動方向，並不再透過currentItem去改變viewModel的month value&#10; ------------------------------------------&#10; &#10;CalendarFragment :&#10;1. 修改拿取當前月份資料的方式，原本是透過eventDao，使用SQL語法篩選出當月的資料，但其實只要在ViewModel注入repo資料，再透過自定義的 getMonthEvent 過濾出想要月份的資料就可，這樣在頁面創建的時候，透過當前的position，載入資料，如果是使用之前設計的viewModel month，來篩選，會因為ViewPager 預先載入的特性，讓前後的頁面會先創建，並吃到當前頁面的month value，所以拿不到對應的月份資料給當下的頁面&#10;2. 透過adapter的itemCallback，拿取使用者點選的日期，傳遞到ViewModel的selectItemDay的屬性值，讓外部的頁面，能知道當前所選取的itemDay&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. Demo與測試 整個 自定義CalendarView" />
    <MESSAGE value="## 修改與優化&#10;BrowseEventFragment :&#10;1. ViewPager 滑動事件的判斷，更改當前的月分與年份都透過覆寫 onPageSelected 的position改變的時候，去注入相對應的資料&#10;2. 設立readAllEvent監聽，當資料庫改變的時候，去刷新當前的頁面&#10;3. 設立下方List item 事件若沒有的話，顯示一個TextView 告知使用者現在沒有活動事件&#10; ------------------------------------------&#10; &#10;CalendarFragment :&#10;1. 設立readAllEvent監聽，當資料庫改變的時候，去刷新當前的頁面&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 將CalendarView的日期依照星期對準&#10;2. Demo與測試 整個 自定義CalendarView" />
    <MESSAGE value="## 修改與優化&#10;BrowseEventFragment :&#10;1. item expand content 會自動撐開&#10; &#10;CalendarFragment :&#10;1. 透過calendar拿到每個月分的第一天的week，算出offset，並在adapter的建構子新增WeekOffset注入，使得onBindView item的時候，必須大於偏移值的position item，才會有動應的日期，size也會因為偏移加大&#10;&#10;SearChFragment:&#10;1. item expand content 會自動撐開&#10;&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 修改CalendarView 刪除event 刷新畫面icon 異常(將CalendarViewAdapter 改成ListAdatper)" />
    <MESSAGE value="## 修改與優化&#10;BrowseEventFragment :&#10;1. EventList新增 update delete功能&#10;2. CalendarViewAdapter 改為 遞延初始化 因為在navigation 跳轉的時候，是從ViewCreated 開始，不會重新創建屬性，所以在popStack 回來的時候，不會重新設定adapter。&#10;由於是FragmentStateAdapter 建構子必須要得到一個Fragment 作為初始的畫面。但由於by lazy的初始化方式，讓adapter沒有重製，應該放在ViewCreated之後，才能成功設置&#10;3. Calendar 實體 原本透過 by lazy生成，但在跳轉update 呼叫viewModel的 getDateFormat 裡面的 calendar set 改變了本體&#10;&#10;CalendarFragment :&#10;1. 修正資料庫更新後，刷新畫面異常&#10;2. 將offset的itemView 設為GONE&#10;&#10;Update &amp; Edit Fragment :&#10;1. 將輸入title 的字元提高到 40&#10;&#10;HomeFragment :&#10;1. 新增一個tv 來告知使用者當前沒有event&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 點擊currentDay icon item 跳轉到當天的頁面" />
    <MESSAGE value="## 修改與優化&#10;BrowseEventFragment :&#10;1. EventList新增 update delete功能&#10;2. CalendarViewAdapter 改為 遞延初始化 因為在navigation 跳轉的時候，是從ViewCreated 開始，不會重新創建屬性，所以在popStack 回來的時候，不會重新設定adapter。&#10;由於是FragmentStateAdapter 建構子必須要得到一個Fragment 作為初始的畫面。但由於by lazy的初始化方式，讓adapter沒有重製，應該放在ViewCreated之後，才能成功設置&#10;3. Calendar 實體 原本透過 by lazy生成，但在跳轉update 呼叫viewModel的 getDateFormat 裡面的 calendar set 改變了本體，導致每次update回來後，view從calendar取得的 day 匯市剛剛update的日期。所以應該在畫面回來的時候，初始化calendar，依樣也用lateinit 來設定，並在onViewCreated之後，重新拿取實體&#10;&#10;CalendarFragment :&#10;1. 修正資料庫更新後，刷新畫面異常&#10;2. 將offset的itemView 設為GONE&#10;&#10;Update &amp; Edit Fragment :&#10;1. 將輸入title 的字元提高到 40&#10;&#10;HomeFragment :&#10;1. 新增一個tv 來告知使用者當前沒有event&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 點擊currentDay icon item 跳轉到當天的頁面" />
    <MESSAGE value="## 修改與優化&#10;BrowseEventFragment :&#10;1. 修正一些畫面跳轉初始化異常 (adapter calendar instance)&#10;2. 新增 currentDay Icon item 跳轉當天日期，並刷新當前ViewModel的日期資料，避免再slide其他頁面的資料不同步&#10;3. currentDay 點擊會有 ripple 效果&#10;&#10;HomeFragment : &#10;1. layout 改為motionLayout 讓title下拉縮起&#10;&#10;SearchFragment : &#10;1. cardView 點擊expand 可透過arrow or root&#10;2. cardView 點擊 會有ripple效果&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 使用motionLayout 優化 SearchFragment 畫面，下拉可收起editText，下拉到最後一個item 隱藏 floating but" />
    <MESSAGE value="## 修改與優化&#10;BrowseEventFragment :&#10;1. 修正一些畫面跳轉初始化異常 (adapter calendar instance)&#10;2. 新增 currentDay Icon item 跳轉當天日期，並刷新當前ViewModel的日期資料，避免再slide其他頁面的資料不同步&#10;3. currentDay 點擊會有 ripple 效果&#10;&#10;HomeFragment : &#10;1. layout 改為motionLayout 讓title下拉縮起&#10;&#10;SearchFragment : &#10;1. cardView 點擊expand 可透過arrow or root&#10;2. cardView 點擊 會有ripple效果&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 使用motionLayout 優化 SearchFragment 畫面，下拉可收起editText，下拉到最後一個item 隱藏 floating but&#10;2. 考慮是否要拿掉BottomNavigation 因為目前BrowseEvent，就能夠呈現足夠的畫面給使用者，已經不太需要原本的Home，感覺可以做替換在優化" />
    <option name="LAST_COMMIT_MESSAGE" value="## 修改與優化&#10;BrowseEventFragment :&#10;1. 修正一些畫面跳轉初始化異常 (adapter calendar instance)&#10;2. 新增 currentDay Icon item 跳轉當天日期，並刷新當前ViewModel的日期資料，避免再slide其他頁面的資料不同步&#10;3. currentDay 點擊會有 ripple 效果&#10;&#10;HomeFragment : &#10;1. layout 改為motionLayout 讓title下拉縮起&#10;&#10;SearchFragment : &#10;1. cardView 點擊expand 可透過arrow or root&#10;2. cardView 點擊 會有ripple效果&#10;&#10;## 待修正&#10;1. BrowseFragment and CalendarView 再檢查一下，有些ViewModel的LiveData使否需要&#10;2. BrowseEventFragment與其他頁面的邏輯與資料傳遞，再思考一下如何更加精簡與讓可讀性高且維護容易&#10;&#10;## 下次工程&#10;1. 使用motionLayout 優化 SearchFragment 畫面，下拉可收起editText，下拉到最後一個item 隱藏 floating but&#10;2. 考慮是否要拿掉BottomNavigation 因為目前BrowseEvent，就能夠呈現足夠的畫面給使用者，已經不太需要原本的Home，感覺可以做替換在優化" />
  </component>
</project>