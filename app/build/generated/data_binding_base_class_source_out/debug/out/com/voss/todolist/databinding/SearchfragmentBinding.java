// Generated by view binder compiler. Do not edit!
package com.voss.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.voss.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SearchfragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button changeContentBut;

  @NonNull
  public final TextView changeStatusTextView;

  @NonNull
  public final Button changeTitleBut;

  @NonNull
  public final TextView changeTitleText;

  @NonNull
  public final TextInputEditText searChEditText;

  @NonNull
  public final TextInputLayout searChInputLayout;

  @NonNull
  public final ConstraintLayout searchLayout;

  @NonNull
  public final RecyclerView searchRecycler;

  @NonNull
  public final ConstraintLayout searchSheetLayout;

  @NonNull
  public final Toolbar searchToolbar;

  private SearchfragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button changeContentBut, @NonNull TextView changeStatusTextView,
      @NonNull Button changeTitleBut, @NonNull TextView changeTitleText,
      @NonNull TextInputEditText searChEditText, @NonNull TextInputLayout searChInputLayout,
      @NonNull ConstraintLayout searchLayout, @NonNull RecyclerView searchRecycler,
      @NonNull ConstraintLayout searchSheetLayout, @NonNull Toolbar searchToolbar) {
    this.rootView = rootView;
    this.changeContentBut = changeContentBut;
    this.changeStatusTextView = changeStatusTextView;
    this.changeTitleBut = changeTitleBut;
    this.changeTitleText = changeTitleText;
    this.searChEditText = searChEditText;
    this.searChInputLayout = searChInputLayout;
    this.searchLayout = searchLayout;
    this.searchRecycler = searchRecycler;
    this.searchSheetLayout = searchSheetLayout;
    this.searchToolbar = searchToolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.searchfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeContent_but;
      Button changeContentBut = ViewBindings.findChildViewById(rootView, id);
      if (changeContentBut == null) {
        break missingId;
      }

      id = R.id.changeStatus_textView;
      TextView changeStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (changeStatusTextView == null) {
        break missingId;
      }

      id = R.id.changeTitle_but;
      Button changeTitleBut = ViewBindings.findChildViewById(rootView, id);
      if (changeTitleBut == null) {
        break missingId;
      }

      id = R.id.changeTitle_text;
      TextView changeTitleText = ViewBindings.findChildViewById(rootView, id);
      if (changeTitleText == null) {
        break missingId;
      }

      id = R.id.searCh_editText;
      TextInputEditText searChEditText = ViewBindings.findChildViewById(rootView, id);
      if (searChEditText == null) {
        break missingId;
      }

      id = R.id.searCh_InputLayout;
      TextInputLayout searChInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (searChInputLayout == null) {
        break missingId;
      }

      id = R.id.search_layout;
      ConstraintLayout searchLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchLayout == null) {
        break missingId;
      }

      id = R.id.search_recycler;
      RecyclerView searchRecycler = ViewBindings.findChildViewById(rootView, id);
      if (searchRecycler == null) {
        break missingId;
      }

      id = R.id.searchSheet_layout;
      ConstraintLayout searchSheetLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchSheetLayout == null) {
        break missingId;
      }

      id = R.id.search_toolbar;
      Toolbar searchToolbar = ViewBindings.findChildViewById(rootView, id);
      if (searchToolbar == null) {
        break missingId;
      }

      return new SearchfragmentBinding((CoordinatorLayout) rootView, changeContentBut,
          changeStatusTextView, changeTitleBut, changeTitleText, searChEditText, searChInputLayout,
          searchLayout, searchRecycler, searchSheetLayout, searchToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
