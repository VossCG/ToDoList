// Generated by view binder compiler. Do not edit!
package com.voss.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.voss.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowContenmonthlytitemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final View itemContentDivider;

  @NonNull
  public final TextView rowContentDateTextView;

  @NonNull
  public final ImageButton rowContentDeleteBut;

  @NonNull
  public final ImageButton rowContentEditBut;

  @NonNull
  public final TextView rowContentTextView;

  @NonNull
  public final TextView rowContentTitleTextView;

  @NonNull
  public final TextView rowShowMoreContentTextView;

  private RowContenmonthlytitemBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardView, @NonNull View itemContentDivider,
      @NonNull TextView rowContentDateTextView, @NonNull ImageButton rowContentDeleteBut,
      @NonNull ImageButton rowContentEditBut, @NonNull TextView rowContentTextView,
      @NonNull TextView rowContentTitleTextView, @NonNull TextView rowShowMoreContentTextView) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.itemContentDivider = itemContentDivider;
    this.rowContentDateTextView = rowContentDateTextView;
    this.rowContentDeleteBut = rowContentDeleteBut;
    this.rowContentEditBut = rowContentEditBut;
    this.rowContentTextView = rowContentTextView;
    this.rowContentTitleTextView = rowContentTitleTextView;
    this.rowShowMoreContentTextView = rowShowMoreContentTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowContenmonthlytitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowContenmonthlytitemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_contenmonthlytitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowContenmonthlytitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.itemContent_divider;
      View itemContentDivider = ViewBindings.findChildViewById(rootView, id);
      if (itemContentDivider == null) {
        break missingId;
      }

      id = R.id.rowContentDate_textView;
      TextView rowContentDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (rowContentDateTextView == null) {
        break missingId;
      }

      id = R.id.rowContentDelete_but;
      ImageButton rowContentDeleteBut = ViewBindings.findChildViewById(rootView, id);
      if (rowContentDeleteBut == null) {
        break missingId;
      }

      id = R.id.rowContentEdit_but;
      ImageButton rowContentEditBut = ViewBindings.findChildViewById(rootView, id);
      if (rowContentEditBut == null) {
        break missingId;
      }

      id = R.id.rowContent_textView;
      TextView rowContentTextView = ViewBindings.findChildViewById(rootView, id);
      if (rowContentTextView == null) {
        break missingId;
      }

      id = R.id.rowContentTitle_textView;
      TextView rowContentTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (rowContentTitleTextView == null) {
        break missingId;
      }

      id = R.id.rowShowMoreContent_TextView;
      TextView rowShowMoreContentTextView = ViewBindings.findChildViewById(rootView, id);
      if (rowShowMoreContentTextView == null) {
        break missingId;
      }

      return new RowContenmonthlytitemBinding((ConstraintLayout) rootView, cardView,
          itemContentDivider, rowContentDateTextView, rowContentDeleteBut, rowContentEditBut,
          rowContentTextView, rowContentTitleTextView, rowShowMoreContentTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
