// Generated by view binder compiler. Do not edit!
package com.voss.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.voss.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdateeventfragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton cancelUpdateBut;

  @NonNull
  public final Button dateUpdateBut;

  @NonNull
  public final TextInputEditText updateContentEditText;

  @NonNull
  public final TextInputLayout updateContentInputLayout;

  @NonNull
  public final TextView updateDateTextView;

  @NonNull
  public final TextView updateFragmentTitleTextView;

  @NonNull
  public final ConstraintLayout updateInnerConstrainLayout;

  @NonNull
  public final TextInputEditText updateTitleEdittext;

  @NonNull
  public final TextInputLayout updateTitleInputLayout;

  @NonNull
  public final Button updateUploadBut;

  private UpdateeventfragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton cancelUpdateBut, @NonNull Button dateUpdateBut,
      @NonNull TextInputEditText updateContentEditText,
      @NonNull TextInputLayout updateContentInputLayout, @NonNull TextView updateDateTextView,
      @NonNull TextView updateFragmentTitleTextView,
      @NonNull ConstraintLayout updateInnerConstrainLayout,
      @NonNull TextInputEditText updateTitleEdittext,
      @NonNull TextInputLayout updateTitleInputLayout, @NonNull Button updateUploadBut) {
    this.rootView = rootView;
    this.cancelUpdateBut = cancelUpdateBut;
    this.dateUpdateBut = dateUpdateBut;
    this.updateContentEditText = updateContentEditText;
    this.updateContentInputLayout = updateContentInputLayout;
    this.updateDateTextView = updateDateTextView;
    this.updateFragmentTitleTextView = updateFragmentTitleTextView;
    this.updateInnerConstrainLayout = updateInnerConstrainLayout;
    this.updateTitleEdittext = updateTitleEdittext;
    this.updateTitleInputLayout = updateTitleInputLayout;
    this.updateUploadBut = updateUploadBut;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateeventfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateeventfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.updateeventfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateeventfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelUpdate_but;
      ImageButton cancelUpdateBut = ViewBindings.findChildViewById(rootView, id);
      if (cancelUpdateBut == null) {
        break missingId;
      }

      id = R.id.dateUpdate_but;
      Button dateUpdateBut = ViewBindings.findChildViewById(rootView, id);
      if (dateUpdateBut == null) {
        break missingId;
      }

      id = R.id.updateContent_editText;
      TextInputEditText updateContentEditText = ViewBindings.findChildViewById(rootView, id);
      if (updateContentEditText == null) {
        break missingId;
      }

      id = R.id.updateContent_InputLayout;
      TextInputLayout updateContentInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (updateContentInputLayout == null) {
        break missingId;
      }

      id = R.id.update_Date_TextView;
      TextView updateDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (updateDateTextView == null) {
        break missingId;
      }

      id = R.id.updateFragmentTitle_textView;
      TextView updateFragmentTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (updateFragmentTitleTextView == null) {
        break missingId;
      }

      id = R.id.updateInner_ConstrainLayout;
      ConstraintLayout updateInnerConstrainLayout = ViewBindings.findChildViewById(rootView, id);
      if (updateInnerConstrainLayout == null) {
        break missingId;
      }

      id = R.id.updateTitle_Edittext;
      TextInputEditText updateTitleEdittext = ViewBindings.findChildViewById(rootView, id);
      if (updateTitleEdittext == null) {
        break missingId;
      }

      id = R.id.updateTitle_InputLayout;
      TextInputLayout updateTitleInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (updateTitleInputLayout == null) {
        break missingId;
      }

      id = R.id.updateUpload_but;
      Button updateUploadBut = ViewBindings.findChildViewById(rootView, id);
      if (updateUploadBut == null) {
        break missingId;
      }

      return new UpdateeventfragmentBinding((ConstraintLayout) rootView, cancelUpdateBut,
          dateUpdateBut, updateContentEditText, updateContentInputLayout, updateDateTextView,
          updateFragmentTitleTextView, updateInnerConstrainLayout, updateTitleEdittext,
          updateTitleInputLayout, updateUploadBut);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
