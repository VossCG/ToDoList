// Generated by view binder compiler. Do not edit!
package com.voss.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.voss.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditeventfragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backHomeArrowBut;

  @NonNull
  public final TextInputEditText contentEditText;

  @NonNull
  public final TextInputLayout contentInputLayout;

  @NonNull
  public final DatePicker datePicker;

  @NonNull
  public final TextView editFragmentTitleTextView;

  @NonNull
  public final NestedScrollView evenContentScroll;

  @NonNull
  public final ConstraintLayout insideConstraintLayout;

  @NonNull
  public final Button setUpEventBut;

  @NonNull
  public final TextView timeTextView;

  @NonNull
  public final TextInputEditText titleEdittext;

  @NonNull
  public final TextInputLayout titleInputLayout;

  private EditeventfragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backHomeArrowBut, @NonNull TextInputEditText contentEditText,
      @NonNull TextInputLayout contentInputLayout, @NonNull DatePicker datePicker,
      @NonNull TextView editFragmentTitleTextView, @NonNull NestedScrollView evenContentScroll,
      @NonNull ConstraintLayout insideConstraintLayout, @NonNull Button setUpEventBut,
      @NonNull TextView timeTextView, @NonNull TextInputEditText titleEdittext,
      @NonNull TextInputLayout titleInputLayout) {
    this.rootView = rootView;
    this.backHomeArrowBut = backHomeArrowBut;
    this.contentEditText = contentEditText;
    this.contentInputLayout = contentInputLayout;
    this.datePicker = datePicker;
    this.editFragmentTitleTextView = editFragmentTitleTextView;
    this.evenContentScroll = evenContentScroll;
    this.insideConstraintLayout = insideConstraintLayout;
    this.setUpEventBut = setUpEventBut;
    this.timeTextView = timeTextView;
    this.titleEdittext = titleEdittext;
    this.titleInputLayout = titleInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditeventfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditeventfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.editeventfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditeventfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backHomeArrow_but;
      ImageButton backHomeArrowBut = ViewBindings.findChildViewById(rootView, id);
      if (backHomeArrowBut == null) {
        break missingId;
      }

      id = R.id.content_editText;
      TextInputEditText contentEditText = ViewBindings.findChildViewById(rootView, id);
      if (contentEditText == null) {
        break missingId;
      }

      id = R.id.content_InputLayout;
      TextInputLayout contentInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentInputLayout == null) {
        break missingId;
      }

      id = R.id.datePicker;
      DatePicker datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.editFragmentTitle_textView;
      TextView editFragmentTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (editFragmentTitleTextView == null) {
        break missingId;
      }

      id = R.id.evenContent_scroll;
      NestedScrollView evenContentScroll = ViewBindings.findChildViewById(rootView, id);
      if (evenContentScroll == null) {
        break missingId;
      }

      id = R.id.insideConstraintLayout;
      ConstraintLayout insideConstraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (insideConstraintLayout == null) {
        break missingId;
      }

      id = R.id.setUpEvent_but;
      Button setUpEventBut = ViewBindings.findChildViewById(rootView, id);
      if (setUpEventBut == null) {
        break missingId;
      }

      id = R.id.time_textView;
      TextView timeTextView = ViewBindings.findChildViewById(rootView, id);
      if (timeTextView == null) {
        break missingId;
      }

      id = R.id.title_Edittext;
      TextInputEditText titleEdittext = ViewBindings.findChildViewById(rootView, id);
      if (titleEdittext == null) {
        break missingId;
      }

      id = R.id.title_InputLayout;
      TextInputLayout titleInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleInputLayout == null) {
        break missingId;
      }

      return new EditeventfragmentBinding((ConstraintLayout) rootView, backHomeArrowBut,
          contentEditText, contentInputLayout, datePicker, editFragmentTitleTextView,
          evenContentScroll, insideConstraintLayout, setUpEventBut, timeTextView, titleEdittext,
          titleInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
